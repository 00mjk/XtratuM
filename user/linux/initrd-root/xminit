#!/bin/sh
# Configure the devices provided by XtratuM on /dev

nopart=0
partid=0

ecmd() { ! $* && echo "failed: $*"; }
quit() { false; [ $$ -ne 1 ]  && exit; }
error(){ echo $*; quit; }

xmdevices(){
	devname=$1/xmctl
	if [ ! -e $devname ]; then
		ecmd mknod $devname c 10 63
	fi
	ecmd chown 0:4 $devname
	ecmd chmod 660 $devname

	if ! grep -q xmcli /proc/devices; then
		return
	fi
	
	for i in `seq 0 1 $nopart`; do
		devname=$1/xmcli$i
		major=`sed -n 's/xmcli//p'  /proc/devices`
		if [ ! -e $devname ]; then
			ecmd mknod $devname c $major $i
		fi
		ecmd chown 0:4 $devname
		ecmd chmod 660 $devname
	done
}

if ! zcat /proc/config.gz | grep -q XM_PARTITION; then
    echo
    echo "xminit: Detect Linux running on XtratuM partition ...                 [FAILED]"
    quit
fi

if [ ! -d "$1" ]; then
    error "usage: xminit /newroot"
fi

# detect number of guest linux partitions
if [ -r /proc/xminfo ]; then
	nopart=`echo quit | xmmanager | grep -c 'Partition[0-9]\+:'`
	if [ $nopart -lt 0 ]; then
		error "invalid nopart: $nopart"
	fi
fi

if which xmmanager >/dev/null; then
	partid=`echo quit | xmmanager | sed -n 's|\* Partition\([0-9]\+\):.*|\1|p'`
	if [ $partid -lt 0 ]; then
		error "invalid partid: $partid"
	fi
fi

if [ -d $1/dev ]; then
	xmdevices $1/dev
fi

if [ -d $1/lib/udev/devices ]; then
	xmdevices $1/lib/udev/devices
fi

# set the shell prompt for each linux partition
export PS1="partition${partid} \w # "
